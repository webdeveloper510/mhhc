{"version":3,"file":"gp-advanced-select-form-editor.js","mappings":"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","sources":["webpack:///./js/src/form-editor.ts"],"sourcesContent":["const $ = window.jQuery;\n\n// Register field setting so Gravity Forms shows it in the sidebar.\n$(function () {\n\tconst { fieldSettings } = window;\n\n\tfor (const fieldType in fieldSettings) {\n\t\tif (\n\t\t\tfieldSettings.hasOwnProperty(fieldType) &&\n\t\t\t$.inArray(fieldType, ['select', 'multiselect', 'address']) !== -1\n\t\t) {\n\t\t\tfieldSettings[fieldType] += ', .gpadvs-field-setting';\n\t\t}\n\t}\n\n\tbindEvents();\n\n\taddInitialFieldPreviewOptions();\n});\n\n/**\n * Override the SetFieldProperty function to trigger an action when the \"Advanced Select\"\n * checkbox is checked.\n */\nconst originalSetFieldProperty = window.SetFieldProperty;\nwindow.SetFieldProperty = function (property: string, value: any) {\n\twindow.gform.doAction('gpadvs_gform_set_field_property', property, value);\n\n\toriginalSetFieldProperty(property, value);\n};\n\n/**\n * Override the UpdateFieldChoices function so that we can update the custom GPADVS\n * multiselect preview UI when the choices are updated.\n */\nconst originalUpdateFieldChoices = window.UpdateFieldChoices;\nwindow.UpdateFieldChoices = function (fieldType: string) {\n\tconst { gpadvsEnable, type } = window.field;\n\tif (gpadvsEnable && ['multiselect', 'select'].includes(type)) {\n\t\tshowGPADVSPreviewUI(window.field);\n\t}\n\n\toriginalUpdateFieldChoices(fieldType);\n};\n\n/**\n * Override the flyout onClose function to trigger an action when the flyout is closed.\n * In this case we update the GPAVDS multiselect field preview UI in case the choices\n * have changed.\n */\ndocument.addEventListener('gform/flyout/pre_init', (event) => {\n\t// @ts-ignore\n\tif (event.detail.instance.options.id !== 'choices-ui-flyout') {\n\t\treturn;\n\t}\n\n\t// @ts-ignore\n\tconst origOnClose = event.detail.instance.options.onClose;\n\t// @ts-ignore\n\tevent.detail.instance.options.onClose = (...args) => {\n\t\tconst { gpadvsEnable, type } = window.field;\n\t\tif (gpadvsEnable && ['multiselect', 'select'].includes(type)) {\n\t\t\tshowGPADVSPreviewUI(window.field);\n\t\t}\n\n\t\t// @ts-ignore\n\t\torigOnClose(...args);\n\t};\n});\n\n/**\n * Responsd to the \"Placeholder\" checkbox being checked by updating the corresponding field\n * preview with the placeholder text.\n */\nwindow.gform.addAction(\n\t'gpadvs_gform_set_field_property',\n\t(property: string, value: any) => {\n\t\tconst { field } = window;\n\n\t\tif (property !== 'placeholder' || !field.gpadvsEnable) {\n\t\t\treturn;\n\t\t}\n\n\t\tshowGPADVSPreviewUI({\n\t\t\t...field,\n\t\t\tplaceholder: value,\n\t\t});\n\t}\n);\n\n/**\n * Responsd to the \"Advanced Select\" checkbox being checked by showing/hiding the \"Placeholder\"\n * setting in the \"Appearance\" tab as needed and toggling the \"Preview UI\" for multiselect\n * fields.\n */\nwindow.gform.addAction(\n\t'gpadvs_gform_set_field_property',\n\t(property: string, value: any) => {\n\t\tif (property !== 'gpadvsEnable') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst field = window.field;\n\t\tconst { type } = window.field;\n\n\t\tif (type === 'multiselect') {\n\t\t\tif (value === true) {\n\t\t\t\tshowPlaceholderSetting();\n\t\t\t} else {\n\t\t\t\thidePlaceholderSetting();\n\t\t\t}\n\t\t}\n\n\t\tif (['multiselect', 'select'].includes(type)) {\n\t\t\tif (value === true) {\n\t\t\t\tshowGPADVSPreviewUI(field);\n\t\t\t} else {\n\t\t\t\tshowDefaultPreviewUI(field);\n\t\t\t}\n\t\t}\n\t}\n);\n\n// Allow Advanced Select fields to use JetSloth Image Choices\nwindow.gform.addFilter(\n\t'gfic_field_can_have_images',\n\tfunction (canHaveImages: boolean, field: any) {\n\t\tif (field.gpadvsEnable) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn canHaveImages;\n\t}\n);\n\nconst toggleEnhancedUINotice = (enabled: boolean) => {\n\tjQuery('#gpadvs-enhanced-ui-notice').remove();\n\n\tconst $enhancedUI = jQuery('#gfield_enable_enhanced_ui');\n\n\tif (enabled) {\n\t\tconst $notice =\n\t\t\tjQuery(`<div id=\"gpadvs-enhanced-ui-notice\" class=\"gform-accessibility-warning field_setting gform-alert gform-alert--accessibility gform-alert--inline\">\n\t\t\t\t\t<span class=\"gform-icon gform-icon--password gform-alert__icon\"></span>\n\t\t\t\t\t<div class=\"gform-alert__message-wrap\">\n\t\t\t\t\t\t<p class=\"gform-alert__message\" style=\"margin: 0;padding-top:2px;\">${window.GPADVS_FORM_EDITOR.strings?.not_compat_with_enhanced_ui}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>`);\n\n\t\t$enhancedUI.prop('disabled', true);\n\n\t\t// Disable Enhanced UI if it's already checked.\n\t\tif (window.field?.enableEnhancedUI) {\n\t\t\t$enhancedUI.prop('checked', false).trigger('change');\n\t\t\twindow.SetFieldEnhancedUI(false);\n\t\t}\n\n\t\t$notice.insertAfter('.enable_enhanced_ui_setting');\n\t} else {\n\t\t$enhancedUI.prop('disabled', false);\n\t}\n};\n\nconst toggleGPPALazyLoadSetting = () => {\n\tconst field = window.field;\n\n\tconst gpadvsEnabled = !!field?.gpadvsEnable;\n\tconst choicePopulatedEnabled = !!field?.['gppa-choices-enabled'];\n\n\t// Show the \"Lazy Load Populated Choices\" if GPPA is populating the choices.\n\tif (window.GPPA && gpadvsEnabled && choicePopulatedEnabled) {\n\t\t$('#gpadvs-enable-child-settings').show();\n\t\t$('#gpadvs-gppa-lazy-load-row').show();\n\t} else {\n\t\t$('#gpadvs-enable-child-settings').hide();\n\t\t$('#gpadvs-gppa-lazy-load-row').hide();\n\t}\n};\n\nconst hideGFAccessibilityWarning = () => {\n\t$('#general_tab > .gform-alert--accessibility').hide();\n\n\t$('#general_tab > .gform-alert--accessibility + li.field_setting').addClass(\n\t\t'gp-advanced-select-no-top-margin'\n\t);\n};\n\nconst showGFAccessibilityWarning = () => {\n\t$('#general_tab > .gform-alert--accessibility').show();\n\n\t$(\n\t\t'#general_tab > .gform-alert--accessibility + li.field_setting'\n\t).removeClass('gp-advanced-select-no-top-margin');\n};\n\n/**\n * Shows the \"Placeholder\" setting in the \"Appearance\" tab.\n */\nconst showPlaceholderSetting = () => {\n\t$('.placeholder_setting').show();\n};\n\n/**\n * Hides the \"Placeholder\" setting in the \"Appearance\" tab.\n */\nconst hidePlaceholderSetting = () => {\n\t$('.placeholder_setting').hide();\n};\n\nconst bindEvents = () => {\n\t$('#gpadvs-enable').on('change', function (this: HTMLInputElement) {\n\t\twindow.SetFieldProperty('gpadvsEnable', this.checked);\n\t\ttoggleEnhancedUINotice(this.checked);\n\n\t\tif (window.imageChoicesAdmin) {\n\t\t\t// trigger gform_load_field_choices to have JetSloth handle showing/hiding the image choices setting\n\t\t\twindow.gform.doAction('gform_load_field_choices', [window.field]);\n\t\t}\n\n\t\tif (this.checked) {\n\t\t\thideGFAccessibilityWarning();\n\t\t} else {\n\t\t\tshowGFAccessibilityWarning();\n\t\t}\n\n\t\ttoggleGPPALazyLoadSetting();\n\t});\n\n\t$('#gpadvs-gppa-lazy-load').on('change', function (this: HTMLInputElement) {\n\t\twindow.SetFieldProperty('gpadvsGPPALazyLoad', this.checked);\n\t});\n\n\t$('#gppa').on(\n\t\t'change',\n\t\t'#gppa-choices-enabled',\n\t\tfunction (this: HTMLInputElement) {\n\t\t\ttoggleGPPALazyLoadSetting();\n\n\t\t\tif (window.field.gpadvsEnable) {\n\t\t\t\trenderGPADVSMSPreviewOptions(window.field);\n\t\t\t}\n\t\t}\n\t);\n\n\t$(document).on('gform_load_field_settings', function (event, field, form) {\n\t\tconst enabled = !!field.gpadvsEnable;\n\t\tconst isMultiSelect = field.type === 'multiselect';\n\n\t\tif (enabled && isMultiSelect) {\n\t\t\tshowPlaceholderSetting();\n\t\t}\n\n\t\t$('#gpadvs-enable').prop('checked', enabled);\n\t\ttoggleEnhancedUINotice(enabled);\n\n\t\t/*\n\t\t * GP Populate Anything Integration\n\t\t */\n\t\tconst $gppaLazyLoad = $('#gpadvs-gppa-lazy-load');\n\t\t$gppaLazyLoad.prop('checked', !!field.gpadvsGPPALazyLoad);\n\n\t\ttoggleGPPALazyLoadSetting();\n\n\t\t// If there is a filter value using the \"Advanced Select Search Value\" special value, then check the checkbox\n\t\t// and disable it.\n\t\t$gppaLazyLoad.prop('disabled', false);\n\n\t\tfilterGroups: for (const filterGroup of field?.[\n\t\t\t'gppa-choices-filter-groups'\n\t\t] ?? ([] as any[])) {\n\t\t\tfor (const filter of filterGroup) {\n\t\t\t\tif (\n\t\t\t\t\tfilter.value ===\n\t\t\t\t\t'special_value:advanced_select_search_value'\n\t\t\t\t) {\n\t\t\t\t\t$gppaLazyLoad.prop('checked', true).prop('disabled', true);\n\n\t\t\t\t\tbreak filterGroups;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/*\n\t\t * JetSloth Image Choices Integration\n\t\t */\n\t\t// Hide JetSloth Image Choices \"Show labels\" and \"Use lightbox\" settings\n\t\tconst $settingsToToggle = $(\n\t\t\t'li.image-choices-setting-show-labels, li.image-choices-setting-use-lightbox'\n\t\t);\n\n\t\t// We use a class as the Jetty Boys use !important on some very specific selectors.\n\t\tconst hiddenImageChoicesSettingClass =\n\t\t\t'gpadvs-hidden-image-choices-setting';\n\n\t\tif (enabled) {\n\t\t\t$settingsToToggle.addClass(hiddenImageChoicesSettingClass);\n\t\t\thideGFAccessibilityWarning();\n\t\t} else {\n\t\t\t$settingsToToggle.removeClass(hiddenImageChoicesSettingClass);\n\t\t\tshowGFAccessibilityWarning();\n\t\t}\n\t});\n};\n\n// Add a special value for Filter values to fields with Advanced Select enabled.\nwindow.gform.addFilter(\n\t'gppa_filter_special_values',\n\tfunction (specialValues: any[], Filter: any) {\n\t\tconst inputType = Filter.field.inputType\n\t\t\t? Filter.field.inputType\n\t\t\t: Filter.field.type;\n\n\t\tif (\n\t\t\t$.inArray(inputType, ['select', 'multiselect', 'address']) === -1 ||\n\t\t\t!Filter.field.gpadvsEnable\n\t\t) {\n\t\t\treturn specialValues;\n\t\t}\n\n\t\tspecialValues.push({\n\t\t\tlabel: 'Advanced Select Search Value',\n\t\t\tvalue: 'special_value:advanced_select_search_value',\n\t\t});\n\n\t\treturn specialValues;\n\t}\n);\n\nwindow.gform.addAction(\n\t'gppa_filter_value_updated',\n\t(value: string, $vueComponent: any) => {\n\t\tif (value === 'special_value:advanced_select_search_value') {\n\t\t\t$vueComponent.updateSelectedOperator('contains');\n\t\t}\n\t}\n);\n/**\n * Handle showing/hiding the custom GPADVS multiselect field preview options\n * on any field with GPADVS enabled.\n */\nfunction addInitialFieldPreviewOptions() {\n\tfor (const field of window.form.fields) {\n\t\tif (!field.gpadvsEnable) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (field.type === 'multiselect') {\n\t\t\trenderGPADVSMSPreviewOptions(field);\n\t\t} else if (field.type === 'select') {\n\t\t\trenderGPADVSelectPreviewOption(field);\n\t\t}\n\t}\n}\n\n/**\n * Adds the field <option>'s to the custom GPADVS multiselect field preview UI.\n *\n * @param field Field object\n */\nfunction renderGPADVSMSPreviewOptions(field: Field) {\n\tconst placeholder = field.placeholder || '';\n\tconst numChoicesToShow = placeholder.length ? 2 : 3;\n\n\tlet choices = field.choices\n\t\t.filter((c) => c.text?.length)\n\t\t.slice(0, numChoicesToShow);\n\n\tif (field['gppa-choices-enabled']) {\n\t\t// create some blank options to fill out the preview\n\t\t// with some varying lengths to mimic the default GPPA styling.\n\t\tchoices = [23, 31, 28].map((len, i) => ({\n\t\t\t// add a non-breaking space for each character in the option text\n\t\t\t// so that each option element will have a width.\n\t\t\ttext: Array(len).fill('&nbsp;').join(''),\n\t\t\tisSelected: false,\n\t\t\tprice: '',\n\t\t\tvalue: String(i),\n\t\t}));\n\t}\n\n\tconst optionsMarkup = choices.map(({ text }) => {\n\t\treturn `<div data-value=\"${text}\" class=\"item\" data-ts-item=\"\">${text}<a href=\"javascript:void(0)\" class=\"remove\" tabindex=\"-1\" title=\"Remove this item\">×</a></div>`;\n\t});\n\n\tconst tsControl = $(\n\t\t`#field_${field.id} > .ginput_container > .ts-wrapper > .ts-control`\n\t);\n\n\t// Remove old options and replace with the new ones.\n\ttsControl.find('.item').each((i, el) => {\n\t\tel.remove();\n\t});\n\ttsControl.prepend(optionsMarkup.join(''));\n\n\ttsControl.find('input').attr('placeholder', placeholder);\n}\n\n/**\n * Adds the field selected <option> to the custom GPADVS select field preview UI.\n *\n * @param field Field object\n */\nfunction renderGPADVSelectPreviewOption(field: Field) {\n\tconst choice = field.choices.filter((c) => c.text && c.value)[0];\n\tconst { placeholder } = field;\n\n\tconst tsControl = $(\n\t\t`#field_${field.id} > .ginput_container > .ts-wrapper > .ts-control`\n\t);\n\n\t// Remove old options so that we can replace with a placeholder or the new option.\n\ttsControl.find('.item').each((i, el) => {\n\t\tel.remove();\n\t});\n\n\tif (placeholder || !choice) {\n\t\ttsControl.find('input').attr('placeholder', field.placeholder || '');\n\n\t\treturn;\n\t}\n\n\ttsControl.find('input').removeAttr('placeholder');\n\n\ttsControl.prepend(\n\t\t`<div data-value=\"${choice.text}\" class=\"item\" data-ts-item=\"\">${choice.text}</div>`\n\t);\n}\n\n/**\n * Shows the custom GPADVS field preview UI.\n *\n * @param field Field object\n */\nfunction showGPADVSPreviewUI(field: Field) {\n\tgetDefaultPreviewElement(field).hide();\n\tgetGPADVSPreviewElement(field).show();\n\n\tif (field.type === 'multiselect') {\n\t\trenderGPADVSMSPreviewOptions(field);\n\t} else if (field.type === 'select') {\n\t\trenderGPADVSelectPreviewOption(field);\n\t}\n}\n\n/**\n * Shows the default field preview UI.\n *\n * @param field Field object\n */\nfunction showDefaultPreviewUI(field: Field) {\n\tgetDefaultPreviewElement(field).show();\n\tgetGPADVSPreviewElement(field).hide();\n}\n\n/**\n * Returns the default preview element for the field.\n *\n * @param field\n * @return A jQuery object for the default preview element for the field.\n */\nfunction getDefaultPreviewElement(field: Field) {\n\treturn $(`#field_${field.id} > .ginput_container > select`)\n\t\t.not('.tomselected')\n\t\t.closest('.ginput_container');\n}\n\n/**\n * Returns the custom GPADVS preview element for the field.\n *\n * @param field\n * @return A jQuery object for the GPADVS preview element for the field.\n */\nfunction getGPADVSPreviewElement(field: Field) {\n\treturn $(\n\t\t`#field_${field.id} > .ginput_container > select.tomselected`\n\t).closest('.ginput_container');\n}\n\n// Make this a module to avoid TypeScript error with block-scoped variables since we're not importing anything\nexport {};\n"],"names":["$","window","jQuery","fieldSettings","fieldType","hasOwnProperty","inArray","bindEvents","form","fields","field","gpadvsEnable","type","renderGPADVSMSPreviewOptions","renderGPADVSelectPreviewOption","addInitialFieldPreviewOptions","originalSetFieldProperty","SetFieldProperty","property","value","gform","doAction","originalUpdateFieldChoices","UpdateFieldChoices","includes","showGPADVSPreviewUI","document","addEventListener","event","detail","instance","options","id","origOnClose","onClose","args","addAction","placeholder","showPlaceholderSetting","hidePlaceholderSetting","getDefaultPreviewElement","show","getGPADVSPreviewElement","hide","showDefaultPreviewUI","addFilter","canHaveImages","toggleEnhancedUINotice","enabled","remove","$enhancedUI","$notice","GPADVS_FORM_EDITOR","strings","not_compat_with_enhanced_ui","prop","enableEnhancedUI","trigger","SetFieldEnhancedUI","insertAfter","toggleGPPALazyLoadSetting","gpadvsEnabled","choicePopulatedEnabled","GPPA","hideGFAccessibilityWarning","addClass","showGFAccessibilityWarning","removeClass","on","this","checked","imageChoicesAdmin","isMultiSelect","$gppaLazyLoad","gpadvsGPPALazyLoad","filterGroups","$settingsToToggle","hiddenImageChoicesSettingClass","numChoicesToShow","length","choices","filter","c","text","slice","map","len","i","Array","fill","join","isSelected","price","String","optionsMarkup","tsControl","find","each","el","prepend","attr","choice","removeAttr","not","closest","specialValues","Filter","inputType","push","label","$vueComponent","updateSelectedOperator"],"sourceRoot":""}