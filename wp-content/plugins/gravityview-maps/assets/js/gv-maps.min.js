function gm_authFailure(){gvMapsDisplayErrorNotice(window.GV_MAPS.google_maps_api_error)}function gvMapsDisplayErrorNotice(error_text){var notice=window.GV_MAPS.display_errors?jQuery("<div/>",{text:error_text,class:"gv-notice gv-error error"}):jQuery(document.createComment(error_text));jQuery(".gv-map-canvas").hide().each(function(){notice.insertBefore(jQuery(this))})}window.GV_MAPS=window.GV_MAPS||{},function($){"use strict";var infowindow,self=$.extend({did_scroll:!1,map_offset:0,map_sticky_container:null,map_entries_container_selector:".gv-map-entries",markers:[],maps:[],is_single_entry:!1,infowindow:{no_empty:!0,max_width:300},mobile_breakpoint:600},window.GV_MAPS);self.hook=()=>{self.hooks.addAction("gk.maps.after_process_map_markers","gravitykit/maps",self.processCluster),self.hooks.addAction("gk.maps.after_process_map_markers","gravitykit/maps",self.processSpider)},self.init=()=>{self.getMaps().length&&(self.is_single_entry=0<$(".gv-map-single-container").length,self.hooks.doAction("gk.maps.before_maps_init",self),self.sticky_canvas_prepare(),self.setup_map_options(),self.initMaps(),self.mobile_init(),self.start_scroll_check(),self.markers_animate_init(),self.hooks.doAction("gk.maps.after_maps_init",self))},self.setup_map_options=()=>{self.MapOptions.zoom=parseInt(self.MapOptions.zoom,10),self.MapOptions.mapTypeId=google.maps.MapTypeId[self.MapOptions.mapTypeId],self.MapOptions.hasOwnProperty("zoomControl")&&!0===self.MapOptions.zoomControl&&self.MapOptions.zoomControlOptions&&self.MapOptions.zoomControlOptions.hasOwnProperty("position")&&(self.MapOptions.zoomControlOptions={position:google.maps.ControlPosition[self.MapOptions.zoomControlOptions.position]})},self.observer=null,self.onMapIntersection=(entries,opts)=>{const $entries=$(entries);entries.forEach(entry=>{var map=entry.target,$map=$(map);$map.data("gkMap");entry.target.classList.toggle("gk-map-visible",entry.isIntersecting),entry.isIntersecting&&($map.hasClass("gk-map-generated")||self.initMap($entries.index($map),map),$map.hasClass("gk-map-markers-generated")||self.processMapMarker(map))})},self.initMaps=$container=>{var $maps=self.getMaps($container);self.hooks.doAction("gk.maps.init_maps",$maps,$container),$maps.each((key,map)=>self.getObserver().observe(map))},self.getObserver=()=>(self.observer||(self.observer=new IntersectionObserver(self.onMapIntersection,{root:null,rootMargin:"-50px",threshold:.01})),self.observer),self.initMap=(index,mapEl)=>{var data,$map=$(mapEl);$map.hasClass("gk-map-visible")&&!$map.hasClass("gk-map-generated")&&(data=$map.data("gkMap"),self.hooks.doAction("gk.maps.before_init_map",$map),index=$.extend({},self.MapOptions,{_index:index,_entryId:data.entry_id,_element:$map,_bounds:new google.maps.LatLngBounds}),data.map=new google.maps.Map(mapEl,index),$map.data("gkMap",data),1===self.layers.bicycling&&(new google.maps.BicyclingLayer).setMap(data.map),1===self.layers.transit&&(new google.maps.TransitLayer).setMap(data.map),1===self.layers.traffic&&(new google.maps.TrafficLayer).setMap(data.map),self.set_zoom_and_center(data.map,$map),$map.addClass("gk-map-generated"),self.hooks.doAction("gk.maps.after_init_map",$map))},self.set_zoom_and_center=(map,$map)=>{google.maps.event.addListenerOnce(map,"idle",()=>{void 0!==$map&&$map.hasClass("gk-multi-entry-map")&&map.getZoom()>self.MapOptions.zoom&&map.setZoom(self.MapOptions.zoom),void 0!==self.MapOptions.center&&self.MapOptions.center.lat&&self.MapOptions.center.lng?map.setCenter(self.MapOptions.center):$map.hasClass("gk-no-markers")&&map.setCenter({lat:0,lng:0})})},self.processMapMarker=map=>{const $map=$(map),data=$map.data("gkMap");self.hooks.doAction("gk.maps.before_process_map_markers",$map,data,self),data.markers_data.forEach(marker=>self.addMarker($map,data,marker)),self.hooks.doAction("gk.maps.after_process_map_markers",$map,data,self),$map.addClass("gk-map-markers-generated"),setTimeout(()=>google.maps.event.trigger(data.map,"idle"),50)},self.processCluster=($map,data)=>{($map=$($map)).is(".gk-multi-entry-map")&&data&&data.markers&&self.MapOptions.markerClustering&&data.markers&&(data.cluster&&data.cluster.clearMarkers(),google.maps.event.addListenerOnce(data.map,"idle",()=>{data.cluster=new MarkerClusterer(data.map,data.markers,{imagePath:self.markerClusterIconPath,maxZoom:self.MapOptions.markerClusteringMaxZoom||self.MapOptions.zoom}),$map.data("gkMap",data)}))},self.processSpider=($map,data)=>{setTimeout(()=>{google.maps.event.addListener(data.map,"idle",()=>{const oms=new OverlappingMarkerSpiderfier(data.map,{markersWontMove:!0,markersWontHide:!0,keepSpiderfied:!0});data.markers.forEach(marker=>oms.addMarker(marker))})},55)},self.getMaps=($container,filterByGenerated=!1)=>{let $maps=($container=$container&&0!==$container.length?$container:$(document)).find(".gv-map-canvas");return filterByGenerated&&($maps=$maps.filter(".gk-map-generated")),self.hooks.applyFilters("gk.maps.get_maps",$maps,filterByGenerated)},self.getSearchMaps=($container,filterByGenerated=!1)=>{$container=self.getMaps($container,filterByGenerated);return self.hooks.applyFilters("gk.maps.get_search_maps",$container.filter(".gk-multi-entry-map"),filterByGenerated)},self.addMarker=($map,data,markerData)=>{data.markers||(data.markers=[]);let marker;var index,icon;data.is_multi_entry_map&&!1!==(index=self.markerExists($map,markerData))&&data.markers[index]&&((marker=data.markers[index]).setMap(data.map),marker.set("gkVisible",!0),marker.setVisible(!0)),marker||(index=new google.maps.LatLng(markerData.lat,markerData.long),icon={url:self.icon},markerData.icon&&(markerData.icon.url&&markerData.icon.url.length&&(icon.url=markerData.icon.url),markerData.icon.scaledSize&&2===markerData.icon.scaledSize.length&&(icon.size=new google.maps.Size(markerData.icon.scaledSize[0],markerData.icon.scaledSize[1])),markerData.icon.origin&&2===markerData.icon.origin.length&&(icon.origin=new google.maps.Point(markerData.icon.origin[0],markerData.icon.origin[1])),markerData.icon.anchor&&2===markerData.icon.anchor.length&&(icon.anchor=new google.maps.Point(markerData.icon.anchor[0],markerData.icon.anchor[1])),markerData.icon.scaledSize)&&2===markerData.icon.scaledSize.length&&(icon.scaledSize=new google.maps.Size(markerData.icon.scaledSize[0],markerData.icon.scaledSize[1])),icon=self.hooks.applyFilters("gk.maps.marker_options",{map:data.map,icon:icon,url:markerData.url,position:index,gkVisible:!0,entryId:markerData.entry_id,content:markerData.content},$map,data,markerData),marker=new google.maps.Marker(icon),data.markers.push(marker),self.bindMarkerEvents(marker,data.map)),$map.data("gkMap",data),data.map._bounds.extend(marker.position),$map.hasClass("gk-multi-entry-map-avoid-rebound")||data.map.fitBounds(data.map._bounds),data.is_multi_entry_map||self.getSearchMaps(data.$container,!0).each((index,searchMap)=>{var searchMap=$(searchMap),searchMapData=searchMap.data("gkMap");self.markerExists(searchMap,marker)||(searchMapData.markers.concat(marker),searchMapData.markers_data.concat(markerData)),searchMap.data("gkMap",searchMapData)}),self.hooks.doAction("gk.maps.after_add_marker",$map,data,marker,markerData)},self.markerExists=($map,checkMarker)=>{$map=$map.data("gkMap");let exists=!1;return $map.markers.forEach((marker,index)=>{checkMarker.entryId&&checkMarker.entryId==marker.entryId&&(exists=index),checkMarker.entry_id&&checkMarker.entry_id==marker.entryId&&(exists=index)}),exists},self.markerDataExists=($map,checkMarker)=>{$map=$map.data("gkMap");let exists=!1;return $map.markers_data.forEach((marker,index)=>{checkMarker.entryId&&checkMarker.entryId==marker.entry_id&&(exists=index),checkMarker.entry_id&&checkMarker.entry_id==marker.entry_id&&(exists=index)}),exists},self.bindMarkerEvents=(marker,map)=>{self.is_single_entry||(google.maps.event.addListener(marker,"spider_click",()=>self.onMarkerClick(marker)),google.maps.event.addListener(marker,"mouseover",self.onMarkerMouseOver(marker)),google.maps.event.addListener(marker,"mouseout",self.onMarkerMouseOut(marker)),google.maps.event.addListener(map,"click",()=>infowindow.close()))},self.onMarkerClick=marker=>{var content=self.infowindow_get_content(marker.content);content?(infowindow.setContent(content),infowindow.open(marker.map,marker)):(infowindow.close(),window.open(marker.url,self.marker_link_target))},self.infowindow_get_content=content=>{var $content;return self.infowindow.no_empty?(($content=$(content)).find('img[src=""]').remove().end().addClass(function(){if(0===$content.find("img").length)return"gv-infowindow-no-image"}).find("a.gv-infowindow-entry-link:not([allow-empty]):empty").text(self.infowindow.empty_text),$content.prop("outerHTML")):content},self.onMarkerMouseOver=marker=>()=>$("#gv_map_"+marker.entryId).addClass("gv-highlight-entry"),self.onMarkerMouseOut=marker=>()=>$("#gv_map_"+marker.entryId).removeClass("gv-highlight-entry"),self.markers_animate_init=()=>{self.is_single_entry||""===self.icon_bounce||$(".gv-map-view").on("mouseenter",self.marker_animate)},self.marker_animate=function(event){var id=this.id.replace("gv_map_","");self.markers.forEach(self.marker_animation_start,id)},self.marker_animation_start=(marker,i,array)=>{marker.entryId!==this||marker.animating||(marker.setAnimation(google.maps.Animation.BOUNCE),setTimeout(self.marker_animation_stop,750,marker))},self.marker_animation_stop=(marker,i)=>{marker.setAnimation(null)},self.sticky_canvas_prepare=()=>{self.map_sticky_container=$(".gv-map-sticky-container");var windowHeight=$(window).height();windowHeight<2*self.map_sticky_container.height()&&$(".gv-map-canvas").height(windowHeight/2)},self.window_scroll_init_offset=()=>{self.map_offset=self.map_sticky_container.offset().top},self.scroll_set=()=>{self.did_scroll=!0},self.start_scroll_check=()=>{0<self.map_sticky_container.length&&($(window).one("scroll",self.window_scroll_init_offset),setInterval(self.window_on_scroll,250))},self.window_on_scroll=()=>{var scroll,canvasObj,listObj,canvasWidth,canvasHeight;self.did_scroll&&(self.did_scroll=!1,scroll=$(window).scrollTop(),canvasObj=self.map_sticky_container.find("."+self.map_id_prefix),listObj=$(self.map_entries_container_selector),canvasWidth=canvasObj.width(),canvasHeight=canvasObj.height(),scroll>=self.map_offset?(canvasObj.width(canvasWidth),self.map_sticky_container.addClass("gv-sticky"),"top"===self.template_layout&&listObj.css("margin-top",canvasHeight+"px")):(canvasObj.width("100%"),self.map_sticky_container.removeClass("gv-sticky"),"top"===self.template_layout&&listObj.css("margin-top","")))},self.mobile_init=()=>{self.map_sticky_container.length<=0||$(window).width()<=parseInt(self.mobile_breakpoint,10)&&self.mobile_map_to_top()},self.mobile_map_to_top=()=>{var parent=self.map_sticky_container.parent(),grandpa=$(".gv-map-container");parent.hasClass("gv-grid-col-1-3")&&1===parent.index()&&parent.detach().prependTo(grandpa)},self.api_key?void 0===window.google?gvMapsDisplayErrorNotice(self.google_maps_script_not_loaded):self.can_use_rest?self.address_field_missing?gvMapsDisplayErrorNotice(self.address_field_missing):"1"===self.hide_until_searched||self.markers_info.length||window.GV_MAPS.is_search?infowindow=new google.maps.InfoWindow({content:"",maxWidth:parseInt(self.infowindow.max_width,10)}):gvMapsDisplayErrorNotice(self.entries_missing_coordinates):gvMapsDisplayErrorNotice(self.cannot_use_rest_error):gvMapsDisplayErrorNotice(self.google_maps_api_key_not_found),self.hooks=window.GravityKit.GravityMaps.hooks,(window.GV_MAPS=self).hook(),$(window).on("load",self.init),$(window).scroll(self.scroll_set)}(jQuery);